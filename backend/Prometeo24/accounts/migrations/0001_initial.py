# Generated by Django 4.2.6 on 2023-11-14 14:08

import accounts.manager
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('events', '0002_contacts_event_eventsponsors_panel_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PreRegister',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('college', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=10)),
                ('year', models.CharField(choices=[('1', '1st Year'), ('2', '2nd Year'), ('3', '3rd Year'), ('4', '4th Year'), ('5', '5th Year'), ('6', 'Graduated'), ('7', 'Faculty/Staff'), ('8', 'NA')], default='1', max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('city', models.CharField(default='', max_length=100)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('NotSay', 'NotSay'), ('Other', 'Other')], default='Male', max_length=100)),
                ('CA', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(default='testing_email', max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Name')),
                ('invite_referral', models.CharField(blank=True, max_length=8, null=True, verbose_name='Referral Code for Inviting')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('NotSay', 'NotSay'), ('Other', 'Other')], default='Male', max_length=10, null=True, verbose_name='Gender')),
                ('contact', models.CharField(blank=True, max_length=10, null=True, verbose_name='Contact')),
                ('current_year', models.CharField(choices=[('1', '1st Year'), ('2', '2nd Year'), ('3', '3rd Year'), ('4', '4th Year'), ('5', '5th Year'), ('6', 'Graduated'), ('7', 'Faculty/Staff'), ('8', 'NA')], default='1', max_length=20, verbose_name='Current Year of Study')),
                ('college', models.CharField(blank=True, max_length=60, null=True, verbose_name='College Name')),
                ('city', models.CharField(blank=True, max_length=40, null=True, verbose_name='City')),
                ('ambassador', models.BooleanField(blank=True, default=False, verbose_name='Campus Ambassador')),
                ('accomodation', models.BooleanField(blank=True, default=False, verbose_name='Accomodation')),
                ('isProfileCompleted', models.BooleanField(default=False, verbose_name='Is Profile Completed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pass_type', models.IntegerField(default=0)),
                ('secondary_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Secondary Email')),
                ('referral_code', models.CharField(blank=True, max_length=8, null=True, verbose_name='Referral Code')),
                ('ca_count', models.IntegerField(default=0)),
                ('registration_id', models.CharField(blank=True, max_length=9, null=True, unique=True, verbose_name='Registration ID')),
                ('events', models.ManyToManyField(blank=True, related_name='participants', to='events.event')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referred_users', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', accounts.manager.UserManager()),
            ],
        ),
    ]
